trigger:
  branches:
    include:
    - vnext
  paths:
    include:
      - 'samples/**/*.json'
    exclude:
      - 'master'

pr:
  branches:
    include:
    - 'vnext'  # must quote since "*" is a YAML reserved character; we want a string
    - 'azure-pipeline-use-code-exporter-app'
    exclude:
      - 'master'

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)
variables:
  - name: 'pathsToParse'
    #value: '$(Pipeline.Workspace)\xplatеxamples\samples\grids,$(Pipeline.Workspace)\xplatеxamples\samples\charts'
    value: '$(Pipeline.Workspace)\xplatеxamples\samples\charts\sparkline'

resources:
  repositories:
    - repository: IgniteUIAngularExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-angular-examples
      ref: 'vnext'

    - repository: IgniteUIBlazorExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-blazor-examples
      ref: 'vnext'

    - repository: IgniteUIReactExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-react-examples
      ref: 'vnext'

    - repository: IgniteUIWebComponentsExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-wc-examples
      ref: 'vnext'

    - repository: IgEditorTemplates
      type: git
      name: igeditor-templates
      ref: 'master'

    - repository: CodeGenerationLibrary
      type: git
      name: code-generation-library
      ref: '2022.2'

pool:
  name: BuildAgentOnPrem

stages:
- stage: Prepare
  jobs: 
  - job: PrepareJsons
    steps:
    - checkout: self
      persistCredentials: true
      lfs: true
      clean: true

    - task: UseDotNet@2
      displayName: 'Use .NET 6'
      inputs:
        packageType: 'sdk'
        version: '6.x'

    - task: PowerShell@2
      displayName: "Remove json files where 'export' flag is false or missing"
      inputs:
        targetType: 'inline'
        script: |
          Write-Output "Chocolatey install jq - tool to traverse JSON files"
          Invoke-Expression -Command "choco install jq -y"

          foreach ($jsonFile in Get-ChildItem "samples" -Filter "*.json" -Recurse)
              {
                Write-Output "Parsing $($jsonFile.FullName)"
                $exportFlag = $(jq .export $jsonFile.FullName -e)
                if ($exportFlag -eq $null -Or $exportFlag -eq "false") {
                    
                    Remove-Item $jsonFile.FullName
                    Write-Output "Removed $($jsonFile.FullName) - export flag is false or missing"
                }
              }
        showWarnings: true
        ignoreLASTEXITCODE: true
        pwsh: true
        workingDirectory: '$(Build.ArtifactStagingDirectory)'

    - publish: '$(Build.SourcesDirectory)'
      displayName: 'Publish XPlat Example JSONs'
      artifact: xplatеxamples

- stage: Convert
  jobs:
  - template: templates/convert-to-platform-job.yml
    parameters:
      platform: 'angular'
      pathsToParse: $(pathsToParse)
      codeExporterAppBranch: '2022.2'

  - template: templates/convert-to-platform-job.yml
    parameters:
      platform: 'blazor'
      pathsToParse: $(pathsToParse)
      codeExporterAppBranch: '2022.2'

  - template: templates/convert-to-platform-job.yml
    parameters:
      platform: 'react'
      pathsToParse: $(pathsToParse)
      codeExporterAppBranch: '2022.2'

  - template: templates/convert-to-platform-job.yml
    parameters:
      platform: 'webcomponents'
      pathsToParse: $(pathsToParse)
      codeExporterAppBranch: '2022.2'
# TODO: Condition for the PR = condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')

#  - job: BuildBlazor
#    workspace:
#      clean: all
#    steps:
#    - checkout: self
#      enabled: false
#
#    - download: current
#      displayName: 'Get XPlat Example JSONs'
#      artifact: xplatеxamples
#      #target:
#
#    - task: UseDotNet@2
#      displayName: 'Use .NET 6'
#      inputs:
#        packageType: 'sdk'
#        version: '6.x'
#
#    - checkout: IgEditorTemplates
#
#    - checkout: CodeGenerationLibrary
#
#    - task: DownloadPipelineArtifact@2
#      displayName: 'Get CodeExporterApp'
#      inputs:
#        buildType: 'specific'
#        project: 'edba4b16-462e-42a0-9fa0-254d6d8a0f41'
#        definition: '261'
#        buildVersionToDownload: 'latestFromBranch'
#        branchName: 'refs/heads/2022.2'
#        artifactName: 'CodeExporterApp'
#        targetPath: '$(Build.SourcesDirectory)\CodeExporterApp'
#
#    - checkout: IgniteUIBlazorExamples
#    - task: PowerShell@2
#      displayName: 'Convert Blazor'
#      inputs:
#        targetType: 'inline'
#        script: |
#          $(Build.SourcesDirectory)\CodeExporterApp\CodeExporter.App.exe `
#          -platform=blazor `
#          -template=$(Build.SourcesDirectory)\igeditor-templates\Blazor\main-template `
#          -library=$(Build.SourcesDirectory)\code-generation-library `
#          -output=$(Build.SourcesDirectory)\igniteui-blazor-examples\samples\ `
#          -source=$(Pipeline.Workspace)\xplatеxamples\samples\grids\,$(Pipeline.Workspace)\xplatеxamples\samples\charts\
#        failOnStderr: true
#        showWarnings: true
#        pwsh: true
#
#  - job: BuildReact
#    workspace:
#      clean: all
#    steps:
#    - checkout: self
#      enabled: false
#
#    - download: current
#      displayName: 'Get XPlat Example JSONs'
#      artifact: xplatеxamples
#      #target:
#
#    - task: UseDotNet@2
#      displayName: 'Use .NET 6'
#      inputs:
#        packageType: 'sdk'
#        version: '6.x'
#
#    - checkout: IgEditorTemplates
#
#    - checkout: CodeGenerationLibrary
#
#    - task: DownloadPipelineArtifact@2
#      displayName: 'Get CodeExporterApp'
#      inputs:
#        buildType: 'specific'
#        project: 'edba4b16-462e-42a0-9fa0-254d6d8a0f41'
#        definition: '261'
#        buildVersionToDownload: 'latestFromBranch'
#        branchName: 'refs/heads/2022.2'
#        artifactName: 'CodeExporterApp'
#        targetPath: '$(Build.SourcesDirectory)\CodeExporterApp'
#    - checkout: IgniteUIReactExamples
#    - task: PowerShell@2
#      displayName: 'Convert React'
#      inputs:
#        targetType: 'inline'
#        script: |
#          $(Build.SourcesDirectory)\CodeExporterApp\CodeExporter.App.exe `
#          -platform=react `
#          -template=$(Build.SourcesDirectory)\igeditor-templates\React\main-template `
#          -library=$(Build.SourcesDirectory)\code-generation-library `
#          -output=$(Build.SourcesDirectory)\igniteui-react-examples\samples\ `
#          -source=$(Pipeline.Workspace)\xplatеxamples\samples\grids\,$(Pipeline.Workspace)\xplatеxamples\samples\charts\
#        failOnStderr: true
#        showWarnings: true
#        pwsh: true
#
#  - job: BuildWebComponents
#    workspace:
#      clean: all
#    steps:
#    - checkout: self
#      enabled: false
#
#    - download: current
#      displayName: 'Get XPlat Example JSONs'
#      artifact: xplatеxamples
#      #target:
#
#    - task: UseDotNet@2
#      displayName: 'Use .NET 6.X'
#      inputs:
#        packageType: 'sdk'
#        version: '6.x'
#
#    - checkout: IgEditorTemplates
#
#    - task: DownloadPipelineArtifact@2
#      displayName: 'Get CodeExporterApp'
#      inputs:
#        buildType: 'specific'
#        project: 'edba4b16-462e-42a0-9fa0-254d6d8a0f41'
#        definition: '261'
#        buildVersionToDownload: 'latestFromBranch'
#        branchName: 'refs/heads/2022.2'
#        artifactName: 'CodeExporterApp'
#        targetPath: '$(Build.SourcesDirectory)\CodeExporterApp'
#
#    - checkout: CodeGenerationLibrary
#    - checkout: IgniteUIWebComponentsExamples
#    - task: PowerShell@2
#      displayName: 'Convert WebComponents'
#      inputs:
#        targetType: 'inline'
#        script: |
#          $(Build.SourcesDirectory)\CodeExporterApp\CodeExporter.App.exe `
#          -platform=WebComponents `
#          -template=$(Build.SourcesDirectory)\igeditor-templates\WebComponents\main-template `
#          -library=$(Build.SourcesDirectory)\code-generation-library `
#          -output=$(Build.SourcesDirectory)\igniteui-wc-examples\samples\ `
#          -source=$(Pipeline.Workspace)\xplatеxamples\samples\grids\,$(Pipeline.Workspace)\xplatеxamples\samples\charts\
#        failOnStderr: true
#        showWarnings: true
#        pwsh: true