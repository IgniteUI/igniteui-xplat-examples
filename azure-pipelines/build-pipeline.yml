trigger:
  branches:
    include:
    - vnext
    - master
    - '2022.2'

pr:
  branches:
    exclude:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

resources:
  repositories:
    - repository: IgniteUIAngularExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-angular-examples
      ref: 'vnext'
    - repository: IgniteUIBlazorExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-blazor-examples
      ref: 'vnext'
    - repository: IgniteUIReactExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-react-examples
      ref: 'vnext'
    - repository: IgniteUIWebComponentsExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-wc-examples
      ref: 'vnext'

stages:
- stage: Build
  pool:
    name: BuildAgentOnPrem
  jobs:
  - job: BuildApp
    steps:
    - checkout: self

    - task: UseDotNet@2
      displayName: 'Use .NET 6'
      inputs:
        packageType: 'sdk'
        version: '6.x'

    - task: DotnetGlobalToolInstaller@0
      inputs:
        name: 'Powershell'
        versionSpec: '6.*'
        checkLatest: true

    - task: PowerShell@2
      displayName: "Remove json files where 'export' flag is false or missing"
      inputs:
        targetType: 'inline'
        script: |
          foreach ($jsonFile in Get-ChildItem "igniteui-xplat-examples\samples" -Filter "*.json" -Recurse)
              {
                Write-Output "Parsing $($jsonFile.FullName)"
                $exportFlag = $(jq .export $jsonFile.FullName -e)
                if ($exportFlag -eq $null -Or $exportFlag -eq "false") {
                    
                    Remove-Item $jsonFile.FullName
                    Write-Output "Removed $($jsonFile.FullName) - export flag is false or missing"
                }
              }
        showWarnings: true
        ignoreLASTEXITCODE: true
        pwsh: true


    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        #project: 'edba4b16-462e-42a0-9fa0-254d6d8a0f41'
        project: 'NetAdvantage'
        definition: '259' # code-generation-library
        buildVersionToDownload: 'latestFromBranch'
        branchName: 'refs/heads/2022.2'
        artifactName: 'CodeGenerationLibrary'
        targetPath: '$(Build.SourcesDirectory)\CodeGenerationLibrary'

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'NetAdvantage'
        definition: '260' # igeditor-templates
        buildVersionToDownload: 'latestFromBranch'
        branchName: 'refs/heads/master'
        artifactName: 'igEditorTemplates'
        targetPath: '$(Build.SourcesDirectory)\igEditorTemplates'

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'edba4b16-462e-42a0-9fa0-254d6d8a0f41'
        definition: '261'
        buildVersionToDownload: 'latestFromBranch'
        branchName: 'refs/heads/2022.2'
        artifactName: 'CodeExporterApp'
        targetPath: '$(Build.SourcesDirectory)\CodeExporterApp'

    - checkout: IgniteUIAngularExamples
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $(Build.SourcesDirectory)\CodeExporterApp\CodeExporter.App.exe `
          -platform=angular `
          -template=$(Build.SourcesDirectory)\igEditorTemplates\Angular\main-template `
          -library=$(Build.SourcesDirectory)\CodeGenerationLibrary `
          -output=$(Build.SourcesDirectory)\igniteui-angular-examples\samples\ `
          -source=$(Build.SourcesDirectory)\igniteui-xplat-examples\samples\grids\,$(Build.SourcesDirectory)\igniteui-xplat-examples\samples\charts\
        failOnStderr: true
        showWarnings: true
        pwsh: true

    - checkout: IgniteUIBlazorExamples
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $(Build.SourcesDirectory)\CodeExporterApp\CodeExporter.App.exe `
          -platform=blazor `
          -template=$(Build.SourcesDirectory)\igEditorTemplates\Blazor\main-template `
          -library=$(Build.SourcesDirectory)\CodeGenerationLibrary `
          -output=$(Build.SourcesDirectory)\igniteui-blazor-examples\samples\ `
          -source=$(Build.SourcesDirectory)\igniteui-xplat-examples\samples\grids\,$(Build.SourcesDirectory)\igniteui-xplat-examples\samples\charts\
        failOnStderr: true
        showWarnings: true
        pwsh: true

    - checkout: IgniteUIReactExamples
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $(Build.SourcesDirectory)\CodeExporterApp\CodeExporter.App.exe `
          -platform=react `
          -template=$(Build.SourcesDirectory)\igEditorTemplates\React\main-template `
          -library=$(Build.SourcesDirectory)\CodeGenerationLibrary `
          -output=$(Build.SourcesDirectory)\igniteui-react-examples\samples\ `
          -source=$(Build.SourcesDirectory)\igniteui-xplat-examples\samples\grids\,$(Build.SourcesDirectory)\igniteui-xplat-examples\samples\charts\
        failOnStderr: true
        showWarnings: true
        pwsh: true

    - checkout: IgniteUIWebComponentsExamples
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $(Build.SourcesDirectory)\CodeExporterApp\CodeExporter.App.exe `
          -platform=WebComponents `
          -template=$(Build.SourcesDirectory)\igEditorTemplates\WebComponents\main-template `
          -library=$(Build.SourcesDirectory)\CodeGenerationLibrary `
          -output=$(Build.SourcesDirectory)\igniteui-wc-examples\samples\ `
          -source=$(Build.SourcesDirectory)\igniteui-xplat-examples\samples\grids\,$(Build.SourcesDirectory)\igniteui-xplat-examples\samples\charts\
        failOnStderr: true
        showWarnings: true
        pwsh: true