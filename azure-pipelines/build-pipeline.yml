trigger:
  branches:
    include:
    - vnext
  paths:
    include:
      - 'samples/**/*.json'
    exclude:
      - 'master'

parameters:
  - name: pathsToParse
    displayName: 'paths under \samples that contain jsons'
    type: string
    default: 'charts\sparkline'

pr:
  branches:
    include:
    - 'vnext'  # must quote since "*" is a YAML reserved character; we want a string
    - 'azure-pipeline-use-code-exporter-app'
    exclude:
      - 'master'

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)
variables:
#  - name: 'pathsToParse'
    #value: '$(Pipeline.Workspace)\xplatеxamples\samples\grids,$(Pipeline.Workspace)\xplatеxamples\samples\charts'
#    value: '$(Pipeline.Workspace)\xplatеxamples\samples\charts\sparkline'
  - name: codeExporterAppBranch
    value: '2022.2'

resources:
  repositories:
    - repository: IgniteUIAngularExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-angular-examples
      ref: 'vnext'

    - repository: IgniteUIBlazorExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-blazor-examples
      ref: 'vnext'

    - repository: IgniteUIReactExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-react-examples
      ref: 'vnext'

    - repository: IgniteUIWebComponentsExamples
      endpoint: IgniteUI
      type: github
      name: IgniteUI/igniteui-wc-examples
      ref: 'vnext'

    - repository: IgEditorTemplates
      type: git
      name: igeditor-templates
      ref: 'master'

    - repository: CodeGenerationLibrary
      type: git
      name: code-generation-library
      ref: '2022.2'

pool:
  name: BuildAgentOnPrem

stages:
- stage: Prepare
  jobs: 
  - job: PrepareJsons
    steps:
    - checkout: self
      persistCredentials: true
      lfs: true
      clean: true

    - task: UseDotNet@2
      displayName: 'Use .NET 6'
      inputs:
        packageType: 'sdk'
        version: '6.x'

    - task: PowerShell@2
      displayName: "Remove json files where 'export' flag is false or missing"
      inputs:
        targetType: 'inline'
        script: |
          Write-Output "Chocolatey install jq - tool to traverse JSON files"
          Invoke-Expression -Command "choco install jq -y"

          foreach ($jsonFile in Get-ChildItem "samples" -Filter "*.json" -Recurse)
              {
                Write-Output "Parsing $($jsonFile.FullName)"
                $exportFlag = $(jq .export $jsonFile.FullName -e)
                if ($exportFlag -eq $null -Or $exportFlag -eq "false") {
                    
                    Remove-Item $jsonFile.FullName
                    Write-Output "Removed $($jsonFile.FullName) - export flag is false or missing"
                }
              }
        showWarnings: true
        ignoreLASTEXITCODE: true
        pwsh: true
        workingDirectory: '$(Build.ArtifactStagingDirectory)'

    - publish: '$(Build.SourcesDirectory)'
      displayName: 'Publish XPlat Example JSONs'
      artifact: xplatеxamples

- stage: Convert
  jobs:
  - template: templates/convert-to-platform-job.yml
    parameters:
      platform: 'Angular'
      destinationGitRepo: 'igniteui-angular-examples'
      pathsToParse: $(pathsToParse)
      codeExporterAppBranch: $(codeExporterAppBranch)

  - template: templates/convert-to-platform-job.yml
    parameters:
      platform: 'Blazor'
      destinationGitRepo: 'igniteui-blazor-examples'
      pathsToParse: $(pathsToParse)
      codeExporterAppBranch: $(codeExporterAppBranch)

  - template: templates/convert-to-platform-job.yml
    parameters:
      platform: 'React'
      destinationGitRepo: 'igniteui-react-examples'
      pathsToParse: $(pathsToParse)
      codeExporterAppBranch: $(codeExporterAppBranch)

  - template: templates/convert-to-platform-job.yml
    parameters:
      platform: 'WebComponents'
      destinationGitRepo: 'igniteui-wc-examples'
      pathsToParse: $(pathsToParse)
      codeExporterAppBranch: $(codeExporterAppBranch)
