parameters:
  - name: platform
  - name: pathsToParse
  - name: codeExporterAppBranch
  - name: destinationGitRepo
  - name: createPR

jobs:
- job: Convert${{ parameters.platform }}
  displayName: 'Convert ${{ parameters.platform }}'
  workspace:
    clean: all
  steps:
  - checkout: self
    enabled: true

  - task: UseDotNet@2
    displayName: 'Use .NET 6'
    inputs:
      packageType: 'sdk'
      version: '6.x'

  - task: DownloadPipelineArtifact@2
    displayName: 'Get CodeExporterApp (${{ parameters.codeExporterAppBranch }}) branch'
    inputs:
      buildType: 'specific'
      project: 'NetAdvantage'
      definition: '261' # code-exporter-app pipeline
      buildVersionToDownload: 'latestFromBranch'
      branchName: 'refs/heads/${{ parameters.codeExporterAppBranch }}'
      artifactName: 'CodeExporterApp'
      targetPath: '$(Build.SourcesDirectory)\CodeExporterApp'

  - checkout: IgniteUI${{ parameters.platform }}Examples
    persistCredentials: true
    lfs: true
    clean: true

  - task: PowerShell@2
    displayName: 'Convert ${{ parameters.platform }}'
    inputs:
      targetType: 'inline'
      script: |
        $(Build.SourcesDirectory)\CodeExporterApp\CodeExporter.App.exe `
        -platform=${{ parameters.platform }} `
        -template=$(Build.SourcesDirectory)\igniteui-xplat-examples\editor-templates\${{ parameters.platform }}\main-template `
        -library=$(Build.SourcesDirectory)\igniteui-xplat-examples\code-gen-library `
        -output=$(Build.SourcesDirectory)\${{ parameters.destinationGitRepo }}\samples\ `
        -source=${{ parameters.pathsToParse }}
      failOnStderr: true
      showWarnings: true
      pwsh: true

  - task: PowerShell@2
    displayName: 'Prepare changed samples'
    inputs:
      targetType: 'inline'
      script: |
        # The goal here is to identify the samples based on the subpaths of the changed files
        $(git diff HEAD --name-only) | `
        ForEach-Object { [System.IO.Path]::GetFullPath("$(Join-Path $pwd $_)\..\..") } | `
        Get-Unique | `
        Copy-Item -Recurse -Force -Destination $(Build.ArtifactStagingDirectory)
      failOnStderr: true
      showWarnings: true
      pwsh: true
      workingDirectory: '$(Build.SourcesDirectory)\${{ parameters.destinationGitRepo }}'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish changed samples - ${{ parameters.platform }}'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: '${{ parameters.platform }}ChangedSamples'
      publishLocation: 'pipeline'

  - ${{ if eq(parameters.createPR, true) }}:
    - task: PowerShell@2
      displayName: 'Prepare for PR: Identify if there are changed samples in destination git repo'
      inputs:
        targetType: 'inline'
        script: |
          Write-Output 'git fetch origin --quiet'
          git fetch origin --quiet
          Write-Output 'git checkout -b ESShared/XPlaform_examples_$(Build.BuildNumber) --quiet'
          git checkout -b ESShared/XPlaform_examples_$(Build.BuildNumber) --quiet
          Write-Output 'git add -A .'
          git add -A .
          Write-Output 'git commit --dry-run'
          git commit --dry-run

          if ($? -eq $True) {
            git commit -m "Adding changes from build $(Build.BuildNumber)"

            git push -u origin ESShared/XPlaform_examples_$(Build.BuildNumber)
            Write-Host "##vso[task.setvariable variable=isDestinationRepoChanged;]true"
          }
          else {
            Write-Host "##vso[task.setvariable variable=isDestinationRepoChanged;]false"
            return 0
          }
        #failOnStderr: true
        #showWarnings: true
        pwsh: true
        workingDirectory: '${{ parameters.destinationGitRepo }}'

    - task: CreatePullRequest@1
      displayName: 'Create PR to IgniteUI/${{ parameters.destinationGitRepo }} vnext'
      #condition: ne(variables['Build.Reason'], 'PullRequest')
      condition: and(in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'Manual'), eq(variables['isDestinationRepoChanged'], true))
      inputs:
        repoType: 'GitHub'
        githubEndpoint: 'IgniteUI'
        githubRepository: 'IgniteUI/${{ parameters.destinationGitRepo }}'
        sourceBranch: 'ESShared/XPlaform_examples_$(Build.BuildNumber)'
        targetBranch: 'vnext'
        title: 'Changes from $(Build.BuildNumber)'
        description: 'Changes from $(Build.BuildNumber) - branch ($(Build.SourceBranchName))'
        tags: 'area: auto-generated-xplat'