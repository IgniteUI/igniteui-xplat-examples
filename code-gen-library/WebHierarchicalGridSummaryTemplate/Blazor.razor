//begin template
@using IgniteUI.Blazor.Controls

@inject IIgniteUIBlazor IgniteUIBlazor;

@code {
    //begin content
    public RenderFragment<IgbSummaryTemplateContext> WebHierarchicalGridSummaryTemplate = (ctx) => {
        var summaryResults = ctx.Implicit;
        return @<div class="summary-temp">
            <span>@(summaryResults[0].Label)<span>@(summaryResults[0].Result)</span></span>
            <span>@(summaryResults[1].Label)<span>@(summaryResults[1].Result)</span></span>
            <span>@(summaryResults[2].Label)<span>@(summaryResults[2].Result)</span></span>
        </div>;
    };
    //end content

    //begin supportingMethods
    private object SingerSummary = new
    {
        operate = new Func<object[], object[], string, IgbSummaryResult[]>((data, allData, fieldName) =>
        {
            var sum = (object[] data) =>
            {
                return data.Length > 0 && data.Select(el => (double)el).Where((el) => el != null).Count() > 0 ?
                    data.Select(el => (double)el).Where((el) => el != null).Aggregate((a, b) => a + b) :
                    0;
            };
            var result = new IgbSummaryResult[] { };
            result.Append(new IgbSummaryResult
                {
                    Key = "nominatedSingers",
                    Label =  "Nominated Singers",
                    Result = allData.Count(rec => (int)((Dictionary<string, object>)rec)["GrammyNominations"] > 0)
                });
            result.Append(new IgbSummaryResult
                {
                    Key = "singersWithAwards",
                    Label = "Singers with Awards",
                    Result = allData.Count(rec => (int)((Dictionary<string, object>)rec)["GrammyAwards"] > 0)
                });
            result.Append(new IgbSummaryResult
                {
                    Key = "nominations",
                    Label = "Total Nominations",
                    Result = sum(allData.Select(r => (object)((int)((Dictionary<string, object>)r)["GrammyNominations"])).ToArray())
                });
            result.Append(new IgbSummaryResult
                {
                    Key = "awards",
                    Label = "Total Awards",
                    Result = sum(allData.Select(r => (object)((int)((Dictionary<string, object>)r)["GrammyAwards"])).ToArray())
                });
            return result;
        })
    };
    //end supportingMethods
}
//end template